name: Deploy to Staging (manual)

on:
  workflow_dispatch:

jobs:
  migrate_and_deploy_staging:
    name: Migrate DB and Deploy (staging)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: casamenteiro_staging
        ports:
          - 5432:5432
        # healthcheck para garantir que o DB está pronto
        options: >-
          --health-cmd "pg_isready -U postgres -d casamenteiro_staging"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 12

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify secrets presence (compile-time)
        run: |
          echo "Has JWT_SECRET? -> ${{ secrets.JWT_SECRET != '' }}"
          echo "Has DATABASE_URL? -> ${{ secrets.DATABASE_URL != '' }}"
          if [ "${{ secrets.DATABASE_URL }}" = "" ]; then
            echo "secrets.DATABASE_URL NOT FOUND in this workflow context"; exit 1
          fi

      - name: Install dbmate
        run: |
          curl -fsSL -o /usr/local/bin/dbmate https://github.com/amacneil/dbmate/releases/latest/download/dbmate-linux-amd64
          sudo chmod +x /usr/local/bin/dbmate
          dbmate --version

      - name: Wait for Postgres service healthy
        run: |
          for i in {1..30}; do
            if pg_isready -h 127.0.0.1 -p 5432 -U postgres -d casamenteiro_staging; then
              echo "Postgres is ready"; break
            fi
            echo "Waiting Postgres ($i/30)..."; sleep 2
          done

      - name: Run migrations on STAGING
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          dbmate up
